{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newUser",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "personnel",
          "type": "uint8"
        }
      ],
      "name": "addPersonnel",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "genrator",
          "type": "address"
        }
      ],
      "name": "getImages",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "prompt",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            }
          ],
          "internalType": "struct AIThing.Entries[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "prompt",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "storemyPrompt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5805cfb13aa7363df3e1e371ff9fe085ff33068996850011959391bc8af7b778",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "975756",
    "logsBloom": "0x
    "blockHash": "0x822b32a94cf4eb74357b478a5a8f0e0782c2e3e1d325dd44c4b81e9ef4662532",
    "transactionHash": "0x5805cfb13aa7363df3e1e371ff9fe085ff33068996850011959391bc8af7b778",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "975756",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "51d87532dc8856893cb32209451aa858",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUser\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"personnel\",\"type\":\"uint8\"}],\"name\":\"addPersonnel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"genrator\",\"type\":\"address\"}],\"name\":\"getImages\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"prompt\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"}],\"internalType\":\"struct AIThing.Entries[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"prompt\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"imageURI\",\"type\":\"string\"}],\"name\":\"storemyPrompt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Darshil Mistry\",\"kind\":\"dev\",\"methods\":{\"storemyPrompt(string,string)\":{\"details\":\"this function would get the\"}},\"stateVariables\":{\"PromptLogs\":{\"details\":\"mappings\"},\"i_owner\":{\"details\":\"the owner of cntract and the deploer can not bechanged\"}},\"title\":\"AI imageGenerator storage Vessel\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The contract is not tested\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AIThing.sol\":\"AIThing\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AIThing.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.9;\\n\\n/**\\n * @title AI imageGenerator storage Vessel\\n * @author Darshil Mistry\\n * @notice The contract is not tested\\n */\\ncontract AIThing {\\n    /// @dev this mapping stores the image prompt and the ipfs image uri\\n    struct Entries {\\n        string prompt;\\n        string image;\\n    }\\n\\n    /// @dev mappings\\n    mapping(address => mapping(uint32 => Entries)) private PromptLogs;\\n    mapping(address => uint32) private UploadCount;\\n    mapping(uint256 => address) private AuthorisedPersonnel;\\n    uint8 private staffCount;\\n\\n    /// @dev the owner of cntract and the deploer can not bechanged\\n    address private immutable i_owner;\\n\\n    ///@dev this guy allows only authorised guys to handle certain functions\\n    modifier AuthorizedPersonneLOnly(uint8 userId) {\\n        require(\\n            AuthorisedPersonnel[userId] == msg.sender,\\n            \\\"UnAuthorised, Access not granted\\\"\\n        );\\n        _;\\n    }\\n\\n    constructor() {\\n        i_owner = msg.sender;\\n        staffCount = staffCount + 1;\\n        AuthorisedPersonnel[staffCount] = msg.sender;\\n    }\\n\\n    ///@dev this function would get the\\n    function storemyPrompt(\\n        string memory prompt,\\n        string memory imageURI\\n    ) public {\\n        Entries memory newEntry = Entries(prompt, imageURI);\\n        PromptLogs[msg.sender][UploadCount[msg.sender]] = newEntry;\\n        UploadCount[msg.sender] += 1;\\n    }\\n\\n    function getImages(\\n        address genrator\\n    ) public view returns (Entries[] memory) {\\n        Entries[] memory history = new Entries[](UploadCount[msg.sender]);\\n        for (uint32 i = 0; i < UploadCount[msg.sender]; i++) {\\n            history[i] = PromptLogs[genrator][i];\\n        }\\n        return history;\\n    }\\n\\n    function addPersonnel(\\n        address newUser,\\n        uint8 personnel\\n    ) public AuthorizedPersonneLOnly(personnel) returns (uint8) {\\n        staffCount = staffCount + 1;\\n        AuthorisedPersonnel[staffCount] = newUser;\\n        return (staffCount);\\n    }\\n}\\n\",\"keccak256\":\"0xad3a037326afe50f6bbef61229ebdfea4b45c4f933e5402a4446252fb4ba4fa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506001600360009054906101000a900460ff166100619190610120565b600360006101000a81548160ff021916908360ff1602179055503360026000600360009054906101000a900460ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610155565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061012b826100e4565b9150610136836100e4565b9250828201905060ff81111561014f5761014e6100f1565b5b92915050565b608051610fd361016d60003960005050610fd36000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634b10ab32146100465780636b7468fa14610062578063f541a59f14610092575b600080fd5b610060600480360381019061005b91906107e4565b6100c2565b005b61007c600480360381019061007791906108ba565b610236565b6040516100899190610a6c565b60405180910390f35b6100ac60048036038101906100a79190610ac7565b610516565b6040516100b99190610b16565b60405180910390f35b60006040518060400160405280848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600082015181600001908161019b9190610d47565b5060208201518160010190816101b19190610d47565b5090505060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900463ffffffff166102139190610e58565b92506101000a81548163ffffffff021916908363ffffffff160217905550505050565b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1667ffffffffffffffff8111156102a9576102a86106b9565b5b6040519080825280602002602001820160405280156102e257816020015b6102cf610670565b8152602001906001900390816102c75790505b50905060005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff168163ffffffff16101561050c576000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008263ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820180546103c190610b60565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed90610b60565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505050815260200160018201805461045390610b60565b80601f016020809104026020016040519081016040528092919081815260200182805461047f90610b60565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b505050505081525050828263ffffffff16815181106104ee576104ed610e90565b5b6020026020010181905250808061050490610ebf565b9150506102e8565b5080915050919050565b6000813373ffffffffffffffffffffffffffffffffffffffff16600260008360ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610f48565b60405180910390fd5b6001600360009054906101000a900460ff166105d99190610f68565b600360006101000a81548160ff021916908360ff1602179055508360026000600360009054906101000a900460ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900460ff1691505092915050565b604051806040016040528060608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106f1826106a8565b810181811067ffffffffffffffff821117156107105761070f6106b9565b5b80604052505050565b600061072361068a565b905061072f82826106e8565b919050565b600067ffffffffffffffff82111561074f5761074e6106b9565b5b610758826106a8565b9050602081019050919050565b82818337600083830152505050565b600061078761078284610734565b610719565b9050828152602081018484840111156107a3576107a26106a3565b5b6107ae848285610765565b509392505050565b600082601f8301126107cb576107ca61069e565b5b81356107db848260208601610774565b91505092915050565b600080604083850312156107fb576107fa610694565b5b600083013567ffffffffffffffff81111561081957610818610699565b5b610825858286016107b6565b925050602083013567ffffffffffffffff81111561084657610845610699565b5b610852858286016107b6565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108878261085c565b9050919050565b6108978161087c565b81146108a257600080fd5b50565b6000813590506108b48161088e565b92915050565b6000602082840312156108d0576108cf610694565b5b60006108de848285016108a5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561094d578082015181840152602081019050610932565b60008484015250505050565b600061096482610913565b61096e818561091e565b935061097e81856020860161092f565b610987816106a8565b840191505092915050565b600060408301600083015184820360008601526109af8282610959565b915050602083015184820360208601526109c98282610959565b9150508091505092915050565b60006109e28383610992565b905092915050565b6000602082019050919050565b6000610a02826108e7565b610a0c81856108f2565b935083602082028501610a1e85610903565b8060005b85811015610a5a5784840389528151610a3b85826109d6565b9450610a46836109ea565b925060208a01995050600181019050610a22565b50829750879550505050505092915050565b60006020820190508181036000830152610a8681846109f7565b905092915050565b600060ff82169050919050565b610aa481610a8e565b8114610aaf57600080fd5b50565b600081359050610ac181610a9b565b92915050565b60008060408385031215610ade57610add610694565b5b6000610aec858286016108a5565b9250506020610afd85828601610ab2565b9150509250929050565b610b1081610a8e565b82525050565b6000602082019050610b2b6000830184610b07565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b7857607f821691505b602082108103610b8b57610b8a610b31565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610bf37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bb6565b610bfd8683610bb6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610c44610c3f610c3a84610c15565b610c1f565b610c15565b9050919050565b6000819050919050565b610c5e83610c29565b610c72610c6a82610c4b565b848454610bc3565b825550505050565b600090565b610c87610c7a565b610c92818484610c55565b505050565b5b81811015610cb657610cab600082610c7f565b600181019050610c98565b5050565b601f821115610cfb57610ccc81610b91565b610cd584610ba6565b81016020851015610ce4578190505b610cf8610cf085610ba6565b830182610c97565b50505b505050565b600082821c905092915050565b6000610d1e60001984600802610d00565b1980831691505092915050565b6000610d378383610d0d565b9150826002028217905092915050565b610d5082610913565b67ffffffffffffffff811115610d6957610d686106b9565b5b610d738254610b60565b610d7e828285610cba565b600060209050601f831160018114610db15760008415610d9f578287015190505b610da98582610d2b565b865550610e11565b601f198416610dbf86610b91565b60005b82811015610de757848901518255600182019150602085019450602081019050610dc2565b86831015610e045784890151610e00601f891682610d0d565b8355505b6001600288020188555050505b505050505050565b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e6382610e19565b9150610e6e83610e19565b9250828201905063ffffffff811115610e8a57610e89610e29565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610eca82610e19565b915063ffffffff8203610ee057610edf610e29565b5b600182019050919050565b600082825260208201905092915050565b7f556e417574686f72697365642c20416363657373206e6f74206772616e746564600082015250565b6000610f32602083610eeb565b9150610f3d82610efc565b602082019050919050565b60006020820190508181036000830152610f6181610f25565b9050919050565b6000610f7382610a8e565b9150610f7e83610a8e565b9250828201905060ff811115610f9757610f96610e29565b5b9291505056fea26469706673582212205424addfa8f1c07ffd70a757f8426115491e51cb57174728fb7cda0f90d6e52c64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634b10ab32146100465780636b7468fa14610062578063f541a59f14610092575b600080fd5b610060600480360381019061005b91906107e4565b6100c2565b005b61007c600480360381019061007791906108ba565b610236565b6040516100899190610a6c565b60405180910390f35b6100ac60048036038101906100a79190610ac7565b610516565b6040516100b99190610b16565b60405180910390f35b60006040518060400160405280848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600082015181600001908161019b9190610d47565b5060208201518160010190816101b19190610d47565b5090505060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900463ffffffff166102139190610e58565b92506101000a81548163ffffffff021916908363ffffffff160217905550505050565b60606000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1667ffffffffffffffff8111156102a9576102a86106b9565b5b6040519080825280602002602001820160405280156102e257816020015b6102cf610670565b8152602001906001900390816102c75790505b50905060005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff168163ffffffff16101561050c576000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008263ffffffff1663ffffffff1681526020019081526020016000206040518060400160405290816000820180546103c190610b60565b80601f01602080910402602001604051908101604052809291908181526020018280546103ed90610b60565b801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505050815260200160018201805461045390610b60565b80601f016020809104026020016040519081016040528092919081815260200182805461047f90610b60565b80156104cc5780601f106104a1576101008083540402835291602001916104cc565b820191906000526020600020905b8154815290600101906020018083116104af57829003601f168201915b505050505081525050828263ffffffff16815181106104ee576104ed610e90565b5b6020026020010181905250808061050490610ebf565b9150506102e8565b5080915050919050565b6000813373ffffffffffffffffffffffffffffffffffffffff16600260008360ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490610f48565b60405180910390fd5b6001600360009054906101000a900460ff166105d99190610f68565b600360006101000a81548160ff021916908360ff1602179055508360026000600360009054906101000a900460ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900460ff1691505092915050565b604051806040016040528060608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106f1826106a8565b810181811067ffffffffffffffff821117156107105761070f6106b9565b5b80604052505050565b600061072361068a565b905061072f82826106e8565b919050565b600067ffffffffffffffff82111561074f5761074e6106b9565b5b610758826106a8565b9050602081019050919050565b82818337600083830152505050565b600061078761078284610734565b610719565b9050828152602081018484840111156107a3576107a26106a3565b5b6107ae848285610765565b509392505050565b600082601f8301126107cb576107ca61069e565b5b81356107db848260208601610774565b91505092915050565b600080604083850312156107fb576107fa610694565b5b600083013567ffffffffffffffff81111561081957610818610699565b5b610825858286016107b6565b925050602083013567ffffffffffffffff81111561084657610845610699565b5b610852858286016107b6565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108878261085c565b9050919050565b6108978161087c565b81146108a257600080fd5b50565b6000813590506108b48161088e565b92915050565b6000602082840312156108d0576108cf610694565b5b60006108de848285016108a5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561094d578082015181840152602081019050610932565b60008484015250505050565b600061096482610913565b61096e818561091e565b935061097e81856020860161092f565b610987816106a8565b840191505092915050565b600060408301600083015184820360008601526109af8282610959565b915050602083015184820360208601526109c98282610959565b9150508091505092915050565b60006109e28383610992565b905092915050565b6000602082019050919050565b6000610a02826108e7565b610a0c81856108f2565b935083602082028501610a1e85610903565b8060005b85811015610a5a5784840389528151610a3b85826109d6565b9450610a46836109ea565b925060208a01995050600181019050610a22565b50829750879550505050505092915050565b60006020820190508181036000830152610a8681846109f7565b905092915050565b600060ff82169050919050565b610aa481610a8e565b8114610aaf57600080fd5b50565b600081359050610ac181610a9b565b92915050565b60008060408385031215610ade57610add610694565b5b6000610aec858286016108a5565b9250506020610afd85828601610ab2565b9150509250929050565b610b1081610a8e565b82525050565b6000602082019050610b2b6000830184610b07565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b7857607f821691505b602082108103610b8b57610b8a610b31565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610bf37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610bb6565b610bfd8683610bb6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610c44610c3f610c3a84610c15565b610c1f565b610c15565b9050919050565b6000819050919050565b610c5e83610c29565b610c72610c6a82610c4b565b848454610bc3565b825550505050565b600090565b610c87610c7a565b610c92818484610c55565b505050565b5b81811015610cb657610cab600082610c7f565b600181019050610c98565b5050565b601f821115610cfb57610ccc81610b91565b610cd584610ba6565b81016020851015610ce4578190505b610cf8610cf085610ba6565b830182610c97565b50505b505050565b600082821c905092915050565b6000610d1e60001984600802610d00565b1980831691505092915050565b6000610d378383610d0d565b9150826002028217905092915050565b610d5082610913565b67ffffffffffffffff811115610d6957610d686106b9565b5b610d738254610b60565b610d7e828285610cba565b600060209050601f831160018114610db15760008415610d9f578287015190505b610da98582610d2b565b865550610e11565b601f198416610dbf86610b91565b60005b82811015610de757848901518255600182019150602085019450602081019050610dc2565b86831015610e045784890151610e00601f891682610d0d565b8355505b6001600288020188555050505b505050505050565b600063ffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e6382610e19565b9150610e6e83610e19565b9250828201905063ffffffff811115610e8a57610e89610e29565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610eca82610e19565b915063ffffffff8203610ee057610edf610e29565b5b600182019050919050565b600082825260208201905092915050565b7f556e417574686f72697365642c20416363657373206e6f74206772616e746564600082015250565b6000610f32602083610eeb565b9150610f3d82610efc565b602082019050919050565b60006020820190508181036000830152610f6181610f25565b9050919050565b6000610f7382610a8e565b9150610f7e83610a8e565b9250828201905060ff811115610f9757610f96610e29565b5b9291505056fea26469706673582212205424addfa8f1c07ffd70a757f8426115491e51cb57174728fb7cda0f90d6e52c64736f6c63430008130033",
  "devdoc": {
    "author": "Darshil Mistry",
    "kind": "dev",
    "methods": {
      "storemyPrompt(string,string)": {
        "details": "this function would get the"
      }
    },
    "stateVariables": {
      "PromptLogs": {
        "details": "mappings"
      },
      "i_owner": {
        "details": "the owner of cntract and the deploer can not bechanged"
      }
    },
    "title": "AI imageGenerator storage Vessel",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "The contract is not tested",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/AIThing.sol:AIThing",
        "label": "PromptLogs",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Entries)7_storage))"
      },
      {
        "astId": 19,
        "contract": "contracts/AIThing.sol:AIThing",
        "label": "UploadCount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint32)"
      },
      {
        "astId": 23,
        "contract": "contracts/AIThing.sol:AIThing",
        "label": "AuthorisedPersonnel",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 25,
        "contract": "contracts/AIThing.sol:AIThing",
        "label": "staffCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_struct(Entries)7_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => struct AIThing.Entries))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_struct(Entries)7_storage)"
      },
      "t_mapping(t_address,t_uint32)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint32,t_struct(Entries)7_storage)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => struct AIThing.Entries)",
        "numberOfBytes": "32",
        "value": "t_struct(Entries)7_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Entries)7_storage": {
        "encoding": "inplace",
        "label": "struct AIThing.Entries",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/AIThing.sol:AIThing",
            "label": "prompt",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 6,
            "contract": "contracts/AIThing.sol:AIThing",
            "label": "image",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}